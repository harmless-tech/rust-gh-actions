name: Rust Build and Test (Zig cc)
## Name: Rust Build and Test (Zig cc)
## Author: harmless-tech
## Version: zigbuild-1.0.0
## Git Repo: https://github.com/harmless-tech/rust-github-actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  bin-name: todo
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
      - name: Create Folders
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/git/db
          mkdir -p ./.cargo-store
      - name: Update Rust
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: rustup update
      - name: Rust Version
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: rustc --version
      - name: Download Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: cargo fetch --verbose --locked
      - name: Store Deps
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: |
          mkdir -p ./.cargo-store/registry
          mkdir -p ./.cargo-store/git
          cp -r ~/.cargo/registry/index ./.cargo-store/registry
          cp -r ~/.cargo/registry/cache ./.cargo-store/registry
          cp -r ~/.cargo/git/db ./.cargo-store/git

  reports:
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Cache Advisory DB
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/advisory-db
          key: cache-advisory-db
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: crow-rest/cargo-prebuilt-action@v1
        with:
          tools: cargo-audit
      - name: Deps Report
        run: |
          echo "### Deps:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo tree --verbose -e normal,build --locked >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      - name: Audit Report
        run: |
          echo "### Audit:" >> $GITHUB_STEP_SUMMARY
          echo "Generated on: $(date --utc)" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cargo audit >> $GITHUB_STEP_SUMMARY || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        if: ${{ contains( matrix.os, 'windows' ) }}
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-zigbuild-test-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Run tests
        run: cargo test --verbose --workspace --all-features --locked

  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu # Linux
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - x86_64-unknown-freebsd
          - x86_64-unknown-netbsd
          - x86_64-unknown-illumos
          - x86_64-sun-solaris
          - riscv64gc-unknown-linux-gnu
          - powerpc64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - mips64-unknown-linux-gnuabi64
          - mips64-unknown-linux-muslabi64
          - mips64el-unknown-linux-gnuabi64
          - mips64el-unknown-linux-muslabi64
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - i686-unknown-freebsd
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - powerpc-unknown-linux-gnu
          - mips-unknown-linux-gnu
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-gnu
          - mipsel-unknown-linux-musl
          - x86_64-pc-windows-gnu # Windows
          - i686-pc-windows-gnu
    runs-on: ubuntu-latest
    needs: [ setup, test ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-zigbuild-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: master
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      - uses: crow-rest/cargo-prebuilt-action@v1
        with:
          tools: cargo-auditable,cargo-zigbuild
      - name: Build
        run: cargo zigbuild --verbose --workspace --locked --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}

  apple-darwin:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    runs-on: macos-latest
    needs: [ setup, test ]
    steps:
      - uses: actions/checkout@v3
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-zigbuild-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: master
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      - uses: crow-rest/cargo-prebuilt-action@v1
        with:
          tools: cargo-auditable,cargo-zigbuild
      - name: Build
        run: cargo auditable zigbuild --verbose --workspace --locked --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}

  pc-windows-msvc:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
          - i686-pc-windows-msvc
    runs-on: windows-latest
    needs: [ setup, test ]
    steps:
      - uses: actions/checkout@v3
      - name: Change file endings in Cargo.lock
        shell: pwsh
        run: (Get-Content -Raw Cargo.lock) -replace "`r`n","`n" | Set-Content Cargo.lock -NoNewline
      - name: Get deps from cache
        uses: actions/cache@v3
        with:
          path: |
            .cargo-store
          key: deps-cache-${{ hashFiles('**/Cargo.lock') }}
          enableCrossOsArchive: true
          fail-on-cache-miss: true
      - name: Move deps
        run: mv ./.cargo-store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
            target
          key: ${{ runner.os }}-zigbuild-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: master
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}
      - uses: crow-rest/cargo-prebuilt-action@v1
        with:
          tools: cargo-auditable,cargo-zigbuild
      - name: Build
        run: cargo auditable zigbuild --verbose --workspace --locked --target ${{ matrix.target }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/debug/${{ env.bin-name }}.exe
